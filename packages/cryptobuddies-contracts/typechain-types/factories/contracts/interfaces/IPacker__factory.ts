/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPacker,
  IPackerInterface,
} from "../../../contracts/interfaces/IPacker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[9]",
        name: "layers",
        type: "uint256[9]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newTokenId",
        type: "uint256",
      },
    ],
    name: "Compose",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[9]",
        name: "layers",
        type: "uint256[9]",
      },
    ],
    name: "encode",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[9]",
        name: "layers",
        type: "uint256[9]",
      },
    ],
    name: "encodeRead",
    outputs: [
      {
        internalType: "uint256",
        name: "baseId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "compositeId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "layersFromComposableId",
    outputs: [
      {
        internalType: "uint256[9]",
        name: "layers",
        type: "uint256[9]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

export class IPacker__factory {
  static readonly abi = _abi;
  static createInterface(): IPackerInterface {
    return new utils.Interface(_abi) as IPackerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPacker {
    return new Contract(address, _abi, signerOrProvider) as IPacker;
  }
}
